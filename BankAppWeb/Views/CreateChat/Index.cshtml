@model BankAppWeb.Models.CreateChatViewModel

@{
    ViewData["Title"] = "Create New Chat";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Create New Chat</h4>
                </div>
                <div class="card-body">
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success">
                            @TempData["SuccessMessage"]
                        </div>
                    }
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger">
                            @TempData["ErrorMessage"]
                        </div>
                    }                    <!-- Search Form (separate from create chat form) -->
                    <div class="mb-3">
                        <label class="form-label">Search Friends</label>
                        <form asp-action="Index" method="get" class="d-inline">
                            <!-- Preserve selected user IDs as hidden fields -->
                            @if (Model.SelectedUserIds != null)
                            {
                                @for (int i = 0; i < Model.SelectedUserIds.Count; i++)
                                {
                                    <input type="hidden" name="selectedUserIds[@i]" value="@Model.SelectedUserIds[i]" />
                                }
                            }
                            <input name="searchQuery" class="form-control" placeholder="Search..."
                                   value="@Model.SearchQuery" oninput="this.form.submit()" />
                        </form>
                    </div>

                    <!-- Create Chat Form -->
                    <form asp-action="Create" method="post">
                        <div class="mb-3">
                            <label asp-for="ChatName" class="form-label">Chat Name</label>
                            <input asp-for="ChatName" class="form-control" placeholder="Enter a name for your chat" />
                            <span asp-validation-for="ChatName" class="text-danger"></span>
                        </div>

                        <!-- Hidden fields to preserve search query and selected users -->
                        <input type="hidden" asp-for="SearchQuery" />
                        @if (Model.SelectedUserIds != null)
                        {
                            @for (int i = 0; i < Model.SelectedUserIds.Count; i++)
                            {
                                <input type="hidden" asp-for="SelectedUserIds[i]" />
                            }
                        }

                        <div class="row">
                            <div class="col-md-6">
                                <label asp-for="SelectedUserIds" class="form-label">Available Friends</label>
                                <div class="card">
                                    <div class="card-body p-3" style="max-height: 300px; overflow-y: auto;">                                        @if (Model.AvailableUsers != null && Model.AvailableUsers.Any())
                                        {
                                            foreach (var user in Model.AvailableUsers.Where(u => !u.IsSelected))
                                            {
                                                <div class="form-check mb-2">
                                                    <input class="form-check-input" type="checkbox"
                                                           id="user_@user.UserId"
                                                           value="@user.UserId"
                                                    @(user.IsSelected ? "checked" : "")
                                                           onchange="toggleUserSelection(@user.UserId, this.checked)" />
                                                    <label class="form-check-label" for="user_@user.UserId">
                                                        @user.FirstName
                                                    </label>
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            <p class="text-muted mb-0">No users available.</p>
                                        }
                                    </div>
                                </div>
                                <span asp-validation-for="SelectedUserIds" class="text-danger"></span>
                            </div>

                            <div class="col-md-6">
                                <label class="form-label">Selected Friends</label>
                                <div class="card">
                                    <div class="card-body p-3" style="max-height: 300px; overflow-y: auto;">                                        @if (Model.SelectedUserIds?.Any() == true)
                                        {
                                            foreach (var user in Model.AvailableUsers?.Where(u => u.IsSelected) ?? Enumerable.Empty<UserForChatViewModel>())
                                            {
                                                <div class="mb-2">
                                                    <span>@user.FirstName</span>
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            <p class="text-muted mb-0">No friends selected.</p>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between mt-4">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-plus-circle"></i> Create Chat
                            </button>
                            <a asp-controller="ChatList" asp-action="Index" class="btn btn-secondary">
                                <i class="fas fa-times"></i> Cancel
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        function toggleUserSelection(userId, isChecked) {
            var currentUrl = new URL(window.location.href);
            var selectedUserIds = currentUrl.searchParams.getAll('selectedUserIds');
            
            if (isChecked) {
                // Add user ID if not already in the list
                if (!selectedUserIds.includes(userId.toString())) {
                    selectedUserIds.push(userId.toString());
                }
            } else {
                // Remove user ID from the list
                selectedUserIds = selectedUserIds.filter(id => id !== userId.toString());
            }
            
            // Remove all existing selectedUserIds parameters
            currentUrl.searchParams.delete('selectedUserIds');
            
            // Add all selected user IDs
            selectedUserIds.forEach(id => {
                currentUrl.searchParams.append('selectedUserIds', id);
            });
            
            // Preserve search query
            var searchQuery = '@Model.SearchQuery';
            if (searchQuery) {
                currentUrl.searchParams.set('searchQuery', searchQuery);
            }
            
            // Navigate to the updated URL
            window.location.href = currentUrl.toString();
        }
    </script>
}